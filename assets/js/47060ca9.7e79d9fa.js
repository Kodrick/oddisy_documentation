"use strict";(self.webpackChunkoddisy_documentation=self.webpackChunkoddisy_documentation||[]).push([[3342],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},874:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:2,title:"Entries"},l=void 0,c={unversionedId:"Concepts/entries",id:"Concepts/entries",title:"Entries",description:"What is an Entry",source:"@site/docs/Concepts/entries.md",sourceDirName:"Concepts",slug:"/Concepts/entries",permalink:"/oddisy_documentation/docs/Concepts/entries",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Concepts/entries.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Entries"},sidebar:"tutorialSidebar",previous:{title:"Projects",permalink:"/oddisy_documentation/docs/Concepts/projects"},next:{title:"Entry Fields",permalink:"/oddisy_documentation/docs/Concepts/entry_fields"}},p={},d=[{value:"What is an Entry",id:"what-is-an-entry",level:2},{value:"Entry Types",id:"entry-types",level:2},{value:"Custom Entry Types",id:"custom-entry-types",level:2},{value:"Changing Entry Type Icon and Color",id:"changing-entry-type-icon-and-color",level:2}],m={toc:d};function u(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"what-is-an-entry"},"What is an Entry"),(0,i.kt)("p",null,"An Entry can represent anything in your world or story, from characters, to locations, to items. They hold information via Fields and Sections and can be linked to any other Entry in a given project. "),(0,i.kt)("h2",{id:"entry-types"},"Entry Types"),(0,i.kt)("p",null,"Entry Types allow for organization and can serve as templates for future entries. "),(0,i.kt)("p",null,"Each Entry Type can have predefined Fields and Sections that can be quickly added to an Entry of that type. "),(0,i.kt)("p",null,"For example, the character entry type, which comes in teh default template, has the following Predefined Fields included:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Age"),(0,i.kt)("li",{parentName:"ul"},"Gender"),(0,i.kt)("li",{parentName:"ul"},"Weight"),(0,i.kt)("li",{parentName:"ul"},"Eye Color"),(0,i.kt)("li",{parentName:"ul"},"Skin Color")),(0,i.kt)("p",null,"Which are all part of a section called Basic Data."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(4087).Z,width:"1582",height:"463"})),(0,i.kt)("p",null,"You can edit what Predefined Fields and Sections are included via the Entry Types Menu in the Settings Menu."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(3662).Z,width:"1920",height:"1040"})),(0,i.kt)("h2",{id:"custom-entry-types"},"Custom Entry Types"),(0,i.kt)("p",null,"You can also create your own Custom Entry Types."),(0,i.kt)("p",null,"For example, if you were writing a story with ",(0,i.kt)("strong",{parentName:"p"},"Magical Creatures")," that will all have a ",(0,i.kt)("em",{parentName:"p"},"Section")," for ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Magic Info"))," and a ",(0,i.kt)("em",{parentName:"p"},"Predifined Field")," for ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Magical Abilities")),". As well as the default fields and sections that all ",(0,i.kt)("strong",{parentName:"p"},"Characters")," have."),(0,i.kt)("p",null,"You could create a Custom Entry Type that inherits from ",(0,i.kt)("strong",{parentName:"p"},"Character")," called ",(0,i.kt)("strong",{parentName:"p"},"Magical Creature")," that has the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Magic Info"))," Section and the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Magical Abilities"))," Predifined Field, and since it inherits from ",(0,i.kt)("strong",{parentName:"p"},"Character")," it will also have all of the fields and Sections that ",(0,i.kt)("strong",{parentName:"p"},"Characters")," have."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(2265).Z,width:"1581",height:"465"})),(0,i.kt)("p",null,"You can also inherit from custom entry types. For example say you had a special ",(0,i.kt)("strong",{parentName:"p"},"Magical Creature")," called a ",(0,i.kt)("strong",{parentName:"p"},"Vampire")," that will all have a ",(0,i.kt)("em",{parentName:"p"},"Predifined Field")," called ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Vampire Abilities")),", which has some prefilled in abilities that all ",(0,i.kt)("strong",{parentName:"p"},"Vampires")," have. As well as the default fields and sections that all ",(0,i.kt)("strong",{parentName:"p"},"Magical Creature")," and ",(0,i.kt)("strong",{parentName:"p"},"Characters")," have."),(0,i.kt)("p",null,"You could first create a ",(0,i.kt)("a",{parentName:"p",href:"../Concepts/predefined_fields"},"Predefined List Field")," called ",(0,i.kt)("strong",{parentName:"p"},"Vampire Abilities")," with the default abilities that all vampires will have."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(1257).Z,width:"1594",height:"307"})),(0,i.kt)("p",null,"You could then create a Custom Entry Type that inherits from ",(0,i.kt)("strong",{parentName:"p"},"Magical Creature")," called ",(0,i.kt)("strong",{parentName:"p"},"Vampire")," that has the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Vampire Abilities"))," Predifined Field, and since it inherits from ",(0,i.kt)("strong",{parentName:"p"},"Magical Creature")," it will also have all of the fields and Sections that ",(0,i.kt)("strong",{parentName:"p"},"Magical Creature")," and ",(0,i.kt)("strong",{parentName:"p"},"Characters")," have."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(7453).Z,width:"1589",height:"464"})),(0,i.kt)("h2",{id:"changing-entry-type-icon-and-color"},"Changing Entry Type Icon and Color"),(0,i.kt)("p",null,"You can edit the Icon and color that is associated with each Entry Type by clicking on the Icon in the Entry Type Settings. This will popup a menu to edit either the icon or the color. Select whichever one you want to edit and the appropriate dialog will show up."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(7499).Z,width:"1175",height:"700"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"fullscreen image",src:n(7146).Z,width:"892",height:"700"})),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The Icon and color is used throughout Oddisy to indicate the type of an entry, like in the Entry Cards."),(0,i.kt)("p",{parentName:"div"},(0,i.kt)("img",{alt:"fullscreen image",src:n(6507).Z,width:"849",height:"419"})))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When filtering entries inherted Entry Types will be included in Enrty Types that they inherit from"),(0,i.kt)("p",{parentName:"div"},(0,i.kt)("img",{alt:"fullscreen image",src:n(1057).Z,width:"1896",height:"968"})))))}u.isMDXComponent=!0},4087:function(e,t,n){t.Z=n.p+"assets/images/character_built_in-c454f1408618425b8f2158cebfb4bf36.JPG"},7146:function(e,t,n){t.Z=n.p+"assets/images/edit_color-d5cced8065bd7a80a6265fec1ec665f3.gif"},7499:function(e,t,n){t.Z=n.p+"assets/images/edit_icon-1f86c82fb6762a6538b4b5ce596afa4a.gif"},6507:function(e,t,n){t.Z=n.p+"assets/images/entry_card-e62834677b053afd592712c83fd3fc18.JPG"},1057:function(e,t,n){t.Z=n.p+"assets/images/entry_filtering-c99221db7ce41a9698d8a064c73cb313.gif"},3662:function(e,t,n){t.Z=n.p+"assets/images/entry_types-032ce7d976d6d012675d97d99aae4bb6.JPG"},2265:function(e,t,n){t.Z=n.p+"assets/images/magical_creatures_example-96e41835550deb2ca441aa38a3440d09.JPG"},1257:function(e,t,n){t.Z=n.p+"assets/images/vampire_abilities_example-f46f144b530389c8943f31581b941d49.JPG"},7453:function(e,t,n){t.Z=n.p+"assets/images/vampires_example-a5ee3215ca9cbf7b68cd4ccace8c0b10.JPG"}}]);