"use strict";(self.webpackChunkoddisy_documentation=self.webpackChunkoddisy_documentation||[]).push([[3342],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=i,y=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},874:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:2,title:"Entries"},s=void 0,l={unversionedId:"Concepts/entries",id:"Concepts/entries",title:"Entries",description:"What is an Entry",source:"@site/docs/Concepts/entries.md",sourceDirName:"Concepts",slug:"/Concepts/entries",permalink:"/oddisy_documentation/docs/Concepts/entries",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Concepts/entries.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Entries"},sidebar:"tutorialSidebar",previous:{title:"Projects",permalink:"/oddisy_documentation/docs/Concepts/projects"},next:{title:"Entry Fields",permalink:"/oddisy_documentation/docs/Concepts/entry_fields"}},u={},p=[{value:"What is an Entry",id:"what-is-an-entry",level:2},{value:"Entry Types",id:"entry-types",level:2}],d={toc:p};function f(e){var t=e.components,c=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"what-is-an-entry"},"What is an Entry"),(0,o.kt)("p",null,"An Entry can represent anything in your world or story, from characters, to locations, to items. They hold information via Fields and Sections and can be linked to any other Entry in a given project. "),(0,o.kt)("h2",{id:"entry-types"},"Entry Types"),(0,o.kt)("p",null,"Entry Types allow for organization and can serve as templates for future entries. "),(0,o.kt)("p",null,"Each Entry Type can have predefined Fields and Sections that can be quickly added to an Entry of that type. "),(0,o.kt)("p",null,"For example, the built in character entry type has the following Predefined Fields included:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Age"),(0,o.kt)("li",{parentName:"ul"},"Gender"),(0,o.kt)("li",{parentName:"ul"},"Weight"),(0,o.kt)("li",{parentName:"ul"},"Eye Color"),(0,o.kt)("li",{parentName:"ul"},"Skin Color")),(0,o.kt)("p",null,"Which are all part of a section called Basic Data."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"fullscreen image",src:n(4087).Z,width:"1597",height:"414"})),(0,o.kt)("p",null,"You can edit what Predefined Fields and Sections are included via the Entry Types Menu in the Settings Menu."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"fullscreen image",src:n(3662).Z,width:"1920",height:"1040"})))}f.isMDXComponent=!0},4087:function(e,t,n){t.Z=n.p+"assets/images/character_built_in-f1637ac9a90149a4fef0f9df689f0bfa.JPG"},3662:function(e,t,n){t.Z=n.p+"assets/images/entry_types-41e84b8ce2ecc4ff52ccc30442d47a95.JPG"}}]);